import * as THREE from 'https://threejsfundamentals.org/threejs/resources/threejs/r132/build/three.module.js';
// import Orbit controls
import { OrbitControls } from 'https://cdn.jsdelivr.net/npm/three@0.121.1/examples/jsm/controls/OrbitControls.js';

// create a render and set the size
var renderer = new THREE.WebGLRenderer();
renderer.setClearColor(new THREE.Color(0x000000));
renderer.setSize( window.innerWidth, window.innerHeight );
document.body.appendChild( renderer.domElement );

// create a camera, which defines where we're looking at.
var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 1000 );

var scene=new THREE.Scene();

var axes=new THREE.AxesHelper();

const vert=new Float32Array([
-1.0,1.0,1.0,
-1.0,-1.0,1.0,
1.0,1.0,1.0,

1.0,1.0,1.0,
-1.0,-1.0,1.0,
1.0,-1.0,1.0,

1.0,1.0,1.0,
1.0,-1.0,1.0,
1.0,-1.0,-1.0,

1.0,1.0,1.0,
1.0,-1.0,-1.0,
1.0,1.0,-1.0,

1.0,1.0,-1.0,
1.0,-1.0,-1.0,
-1.0,1.0,-1.0,

-1.0,1.0,-1.0,
1.0,-1.0,-1.0,
-1.0,-1.0,-1.0,

-1.0,-1.0,-1.0,
-1.0,-1.0,1.0,
-1.0,1.0,-1.0,

-1.0,1.0,-1.0,
-1.0,-1.0,1.0,
-1.0,1.0,1.0,

-1.0,1.0,-1.0,
-1.0,1.0,1.0,
1.0,1.0,1.0,

-1.0,1.0,-1.0,
1.0,1.0,1.0,
1.0,1.0,-1.0,

-1.0,-1.0,1.0,
-1.0,-1.0,-1.0,
1.0,-1.0,1.0,

1.0,-1.0,1.0,
-1.0,-1.0,-1.0,
1.0,-1.0,-1.0
]);

const geometry=new THREE.BufferGeometry();
geometry.setAttribute('position', new THREE.BufferAttribute(vert, 3));


const matrix=new THREE.Matrix4();

const constant=new THREE.BufferGeometry();
constant.setAttribute('position', new THREE.BufferAttribute(vert, 3));

geometry.computeVertexNormals();


const material = new THREE.MeshNormalMaterial();
const mesh = new THREE.Mesh( geometry, material );
mesh.position.set(0,0,0); 
scene.add(mesh);
matrix.set(1,0,0,0,
						0,1,0,0,
            0,0,1,0,
            0,0,0,1);
geometry.applyMatrix4(matrix);
camera.position.set(0,0,10);

var controls=new OrbitControls (camera, renderer.domElement);

var lightcolor=0xFFFFFF;
var intense=10;
var light=new THREE.AmbientLight(lightcolor, intense);
scene.add(light);



var animate = function(){
	requestAnimationFrame(animate);
	renderer.render( scene, camera );
  controls.update();
}

animate();
